{"version":3,"sources":["../../jsx/modifiers/insertImage.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAUO,IAAM,oCAAc,SAAd,WAAc,CAAC,WAAD,EAAc,IAAd,EAAuB;AAChD,MAAM,eAAe,YAAY,iBAAZ,EAArB;AACA,MAAM,iBAAiB,YAAY,YAAZ,EAAvB;;AAEA,MAAM,eAAe,kBAAS,WAAT,CACnB,YADmB,EAEnB,cAFmB,EAGnB,UAHmB,CAArB;;AAMA,MAAM,kBAAkB,aAAa,iBAAb,EAAxB;AACA,MAAM,aAAa,kBAAS,UAAT,CAAoB,YAApB,EAAkC,eAAlC,CAAnB;AACA,MAAM,kBAAkB,WAAW,iBAAX,EAAxB;;AAEA,MAAM,UAAU,kBAAS,YAAT,CAAsB,UAAtB,EAAkC,eAAlC,EAAmD,OAAnD,CAAhB;;AAEA,MAAM,YAAY,gBAAO,MAAP,CAChB,OADgB,EAEhB,WAFgB,EAGhB,EAAE,SAAS,IAAI,eAAJ,CAAoB,IAApB,CAAX,EAHgB,CAAlB;;AAMA,MAAM,WAAW,2BAAkB,MAAlB,CAAyB,EAAE,QAAQ,SAAV,EAAzB,CAAjB;;AAEA,MAAM,gBAAgB,CACpB,0BAAiB;AACf,SAAK,sBADU;AAEf,UAAM,OAFS;AAGf,UAAM,GAHS;AAIf,mBAAe,qBAAK,uBAAO,QAAP,EAAiB,CAAjB,CAAL;AAJA,GAAjB,CADoB,EAOpB,0BAAiB;AACf,SAAK,sBADU;AAEf,UAAM,UAFS;AAGf,UAAM,EAHS;AAIf,mBAAe;AAJA,GAAjB,CAPoB,CAAtB;;AAeA,MAAM,WAAW,yBAAgB,eAAhB,CAAgC,aAAhC,CAAjB;;AAEA,MAAM,YAAY,kBAAS,mBAAT,CAChB,OADgB,EAEhB,eAFgB,EAGhB,QAHgB,CAAlB;;AAMA,MAAM,aAAa,UAAU,KAAV,CAAgB;AACjC,qBAAiB,cADgB;AAEjC,oBAAgB,UAAU,iBAAV,GAA8B,GAA9B,CAAkC,UAAlC,EAA8C,IAA9C;AAFiB,GAAhB,CAAnB;;AAKA,SAAO,qBAAY,IAAZ,CAAiB,WAAjB,EAA8B,UAA9B,EAA0C,iBAA1C,CAAP;AACD,CArDM","file":"insertImage.js","sourcesContent":["import { List, Repeat } from 'immutable';\nimport {\n  BlockMapBuilder,\n  CharacterMetadata,\n  ContentBlock,\n  EditorState,\n  Entity,\n  Modifier,\n  genKey,\n} from 'draft-js';\n\nexport const insertImage = (editorState, file) => {\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n\n  const afterRemoval = Modifier.removeRange(\n    contentState,\n    selectionState,\n    'backward'\n  );\n\n  const targetSelection = afterRemoval.getSelectionAfter();\n  const afterSplit = Modifier.splitBlock(afterRemoval, targetSelection);\n  const insertionTarget = afterSplit.getSelectionAfter();\n\n  const asMedia = Modifier.setBlockType(afterSplit, insertionTarget, 'media');\n\n  const entityKey = Entity.create(\n    'TOKEN',\n    'IMMUTABLE',\n    { preview: URL.createObjectURL(file) }\n  );\n\n  const charData = CharacterMetadata.create({ entity: entityKey });\n\n  const fragmentArray = [\n    new ContentBlock({\n      key: genKey(),\n      type: 'media',\n      text: ' ',\n      characterList: List(Repeat(charData, 1))\n    }),\n    new ContentBlock({\n      key: genKey(),\n      type: 'unstyled',\n      text: '',\n      characterList: List()\n    })\n  ];\n\n  const fragment = BlockMapBuilder.createFromArray(fragmentArray);\n\n  const withMedia = Modifier.replaceWithFragment(\n    asMedia,\n    insertionTarget,\n    fragment\n  );\n\n  const newContent = withMedia.merge({\n    selectionBefore: selectionState,\n    selectionAfter: withMedia.getSelectionAfter().set('hasFocus', true)\n  });\n\n  return EditorState.push(editorState, newContent, 'insert-fragment');\n}\n"]}