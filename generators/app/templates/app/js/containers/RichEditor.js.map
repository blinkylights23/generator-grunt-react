{"version":3,"sources":["../../jsx/containers/RichEditor.jsx"],"names":[],"mappings":"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","file":"RichEditor.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport {\n  Editor,\n  EditorState,\n  Entity,\n  RichUtils,\n  ContentState,\n  CompositeDecorator\n} from 'draft-js';\nimport {\n  getSelectionRange,\n  getSelectedBlockElement,\n  getSelectionCoords\n} from '../utils/selection';\n\nimport { insertImage } from '../modifiers/insertImage';\nimport SideToolbar from './SideToolbar';\nimport LinkEditor from './LinkEditor';\nimport MarkupPreview from './MarkupPreview';\nimport InlineToolbar from '../components/InlineToolbar';\nimport ImageComponent from '../components/ImageComponent';\n\n\n\nclass RichEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      inlineToolbar: { show: false },\n      linkEditor: { show: false }\n    };\n\n    this.onChange = (editorState) => {\n      if (!editorState.getSelection().isCollapsed()) {\n        const selectionRange = getSelectionRange();\n        const selectionCoords = getSelectionCoords(selectionRange);\n        this.setState({\n          inlineToolbar: {\n            show: true,\n            position: {\n              top: selectionCoords.offsetTop,\n              left: selectionCoords.offsetLeft\n            }\n          }\n        });\n      } else {\n        this.setState({ inlineToolbar: { show: false }, linkEditor: { show: false } });\n      }\n\n      this.setState({ editorState });\n      setTimeout(this.updateSelection, 0);\n    }\n\n    this.linkEditorToggle = (editorState) => {\n      if (!editorState.getSelection().isCollapsed()) {\n        const selectionRange = getSelectionRange();\n        const selectionCoords = getSelectionCoords(selectionRange);\n        this.setState({\n          linkEditor: {\n            show: !this.state.linkEditor.show,\n            position: {\n              top: selectionCoords.offsetTop + 80,\n              left: selectionCoords.offsetLeft\n            }\n          }\n        });\n      } else {\n        this.setState({ inlineToolbar: { show: false }, linkEditor: { show: false } });\n      }\n\n      this.setState({ editorState });\n      setTimeout(this.updateSelection, 0);\n    }\n\n    this.focus = () => this.refs.editor.focus();\n    this.updateSelection = () => this._updateSelection();\n    this.handleKeyCommand = (command) => this._handleKeyCommand(command);\n    this.handleFileInput = (e) => this._handleFileInput(e);\n    this.handleUploadImage = () => this._handleUploadImage();\n    this.handleLinkEdit = () => this._handleLInkEdit();\n    this.toggleBlockType = (type) => this._toggleBlockType(type);\n    this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\n    this.insertImage = (file) => this._insertImage(file);\n\n    this.blockRenderer = (block) => {\n      if (block.getType() === 'media') {\n        return {\n          component: ImageComponent\n        };\n      }\n      return null;\n    }\n\n    this.blockStyler = (block) => {\n      if (block.getType() === 'unstyled') {\n        return 'paragraph';\n      }\n      return null;\n    }\n\n  }\n\n  _updateSelection() {\n    const selectionRange = getSelectionRange();\n    let selectedBlock;\n    if (selectionRange) {\n      selectedBlock = getSelectedBlockElement(selectionRange);\n    }\n    this.setState({\n      selectedBlock,\n      selectionRange\n    });\n  }\n\n  _handleKeyCommand(command) {\n    const { editorState } = this.state;\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  _toggleBlockType(blockType) {\n    this.onChange(\n      RichUtils.toggleBlockType(\n        this.state.editorState,\n        blockType\n      )\n    );\n  }\n\n  _toggleInlineStyle(inlineStyle) {\n    this.onChange(\n      RichUtils.toggleInlineStyle(\n        this.state.editorState,\n        inlineStyle\n      )\n    );\n  }\n\n  _handleLinkEdit(link) {\n    console.log(link);\n  }\n\n  _insertImage(file) {\n    this.setState({\n      editorState: insertImage(this.state.editorState, file)\n    });\n  }\n\n  _handleFileInput(e) {\n    const fileList = e.target.files;\n    const file = fileList[0];\n    this.insertImage(file);\n  }\n\n  _handleUploadImage() {\n    this.refs.fileInput.click();\n  }\n\n  render() {\n    const { editorState, selectedBlock, selectionRange } = this.state;\n    let sideToolbarOffsetTop = 0;\n\n    if (selectedBlock) {\n      const editor = document.getElementById('richEditor');\n      const editorBounds = editor.getBoundingClientRect();\n      const blockBounds = selectedBlock.getBoundingClientRect();\n\n      sideToolbarOffsetTop = (blockBounds.bottom - editorBounds.top)\n                           - 31; // height of side toolbar\n    }\n\n    return (\n      <div className=\"editor\" id=\"richEditor\" onClick={this.focus}>\n        {selectedBlock\n          ? <SideToolbar\n              editorState={editorState}\n              style={{ top: sideToolbarOffsetTop }}\n              onToggle={this.toggleBlockType}\n              onUploadImage={this.handleUploadImage}\n            />\n          : null\n        }\n        {this.state.inlineToolbar.show\n          ? <InlineToolbar\n              editorState={editorState}\n              onToggle={this.toggleInlineStyle}\n              position={this.state.inlineToolbar.position}\n              linkEditorToggle={this.linkEditorToggle}\n            />\n          : null\n        }\n        {this.state.linkEditor.show\n          ? <LinkEditor\n              editorState={editorState}\n              onChange={this.handleLinkEdit}\n              position={this.state.linkEditor.position}\n            />\n          : null\n        }\n        <Editor\n          blockRendererFn={this.blockRenderer}\n          blockStyleFn={this.blockStyler}\n          editorState={editorState}\n          handleKeyCommand={this.handleKeyCommand}\n          onChange={this.onChange}\n          placeholder=\"Write something...\"\n          spellCheck={true}\n          readOnly={this.state.editingImage}\n          ref=\"editor\"\n        />\n        <input type=\"file\" ref=\"fileInput\" style={{display: 'none'}}\n          onChange={this.handleFileInput} />\n        <MarkupPreview editorState={editorState} />\n      </div>\n    );\n  }\n}\n\nexport default RichEditor;\n"]}