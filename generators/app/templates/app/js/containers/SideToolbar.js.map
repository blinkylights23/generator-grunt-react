{"version":3,"sources":["../../jsx/containers/SideToolbar.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAM,cAAc,CAClB,EAAE,OAAO,IAAT,EAAe,OAAO,YAAtB,EADkB,EAElB,EAAE,OAAO,IAAT,EAAe,OAAO,YAAtB,EAFkB,EAGlB,EAAE,MAAM,kBAAR,EAA4B,OAAO,qBAAnC,EAHkB,EAIlB,EAAE,MAAM,gBAAR,EAA0B,OAAO,mBAAjC,EAJkB,EAKlB,EAAE,MAAM,SAAR,EAAmB,OAAO,YAA1B,EALkB,CAApB;;AAQA,IAAM,oBAAoB,SAApB,iBAAoB,OAA+B;AAAA,MAA5B,WAA4B,QAA5B,WAA4B;AAAA,MAAf,QAAe,QAAf,QAAe;;AACvD,MAAM,YAAY,YAAY,YAAZ,EAAlB;AACA,MAAM,YAAY,YAAY,iBAAZ,GACY,cADZ,CAC2B,UAAU,WAAV,EAD3B,EAEY,OAFZ,EAAlB;AAGA,SACE;AAAA;IAAA,EAAK,WAAU,cAAf;IACE;AAAA;MAAA,EAAI,WAAU,eAAd;MACG,YAAY,GAAZ,CAAgB;AAAA,eACf;AACE,eAAK,KAAK,KAAL,IAAc,KAAK,IAD1B;AAEE,kBAAQ,KAAK,KAAL,KAAe,SAFzB;AAGE,iBAAO,KAAK,KAHd;AAIE,gBAAM,KAAK,IAJb;AAKE,oBAAU,QALZ;AAME,iBAAO,KAAK;AANd,UADe;AAAA,OAAhB;AADH;AADF,GADF;AAgBD,CArBD;;IAuBM,W;;;AACJ,uBAAY,KAAZ,EAAmB;AAAA;;AAAA,+FACX,KADW;;AAEjB,UAAK,KAAL,GAAa;AACX,kBAAY;AADD,KAAb;AAFiB;AAKlB;;;;6BACQ;AAAA;;AAAA,UACC,UADD,GACgB,KAAK,KADrB,CACC,UADD;AAAA,mBAE0C,KAAK,KAF/C;AAAA,UAEC,WAFD,UAEC,WAFD;AAAA,UAEc,aAFd,UAEc,aAFd;AAAA,UAE6B,QAF7B,UAE6B,QAF7B;;AAGP,aACE;AAAA;QAAA,EAAK,OAAO,KAAK,KAAL,CAAW,KAAvB,EAA8B,WAAU,cAAxC;QACE,qCAAG,WAAU,SAAb;AACG,uBAAa;AAAA,mBAAK,EAAE,cAAF,EAAL;AAAA,WADhB;AAEG,mBAAS;AAFZ,UADF;QAME;AAAA;UAAA,EAAG,WAAU,QAAb;AACG,0BAAc;AAAA,qBAAM,OAAK,QAAL,CAAc,EAAE,YAAY,IAAd,EAAd,CAAN;AAAA,aADjB;AAEG,yBAAa,qBAAC,CAAD;AAAA,qBAAO,EAAE,cAAF,EAAP;AAAA,aAFhB;AAGG,0BAAc;AAAA,qBAAM,OAAK,QAAL,CAAc,EAAE,YAAY,KAAd,EAAd,CAAN;AAAA;AAHjB;UAKG,aACE,8BAAC,iBAAD,IAAmB,aAAa,WAAhC,EAA6C,UAAU,QAAvD,GADF,GAEE;AAPL;AANF,OADF;AAmBD;;;;;;kBAGY,W","file":"SideToolbar.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ToolbarIcon from '../components/ToolbarIcon';\n\nconst BLOCK_TYPES = [\n  { label: 'H1', style: 'header-one' },\n  { label: 'H2', style: 'header-two' },\n  { icon: 'a-unordered-list', style: 'unordered-list-item' },\n  { icon: 'a-ordered-list', style: 'ordered-list-item' },\n  { icon: 'a-quote', style: 'blockquote' }\n];\n\nconst SideToolbarExtras = ({ editorState, onToggle }) => {\n  const selection = editorState.getSelection();\n  const blockType = editorState.getCurrentContent()\n                               .getBlockForKey(selection.getStartKey())\n                               .getType();\n  return (\n    <div className=\"toolbar side\">\n      <ul className=\"toolbar-icons\">\n        {BLOCK_TYPES.map(type =>\n          <ToolbarIcon\n            key={type.label || type.icon}\n            active={type.style === blockType}\n            label={type.label}\n            icon={type.icon}\n            onToggle={onToggle}\n            style={type.style}\n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\nclass SideToolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n  render() {\n    const { isExpanded } = this.state;\n    const { editorState, onUploadImage, onToggle } = this.props;\n    return (\n      <div style={this.props.style} className=\"side-toolbar\">\n        <i className=\"a-photo\"\n           onMouseDown={e => e.preventDefault()}\n           onClick={onUploadImage}\n        >\n        </i>\n        <i className=\"a-menu\"\n           onMouseEnter={() => this.setState({ isExpanded: true })}\n           onMouseDown={(e) => e.preventDefault()}\n           onMouseLeave={() => this.setState({ isExpanded: false })}\n        >\n          {isExpanded\n           ? <SideToolbarExtras editorState={editorState} onToggle={onToggle} />\n           : null\n          }\n        </i>\n      </div>\n    )\n  }\n}\n\nexport default SideToolbar;\n"]}